# Beeyond Configuration
beeyond.postgres.host=localhost:5432
beeyond.postgres.database=beeyond_db
beeyond.postgres.username=beeyond
beeyond.postgres.password=beeyond
beeyond.keycloak.host=http://localhost:8280
beeyond.keycloak.realm=school
beeyond.keycloak.client-id=beeyond
beeyond.keycloak.secret=8516ccf3-5ed5-4f42-8718-6a769150ba2a
# Database Configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://${beeyond.postgres.host}/${beeyond.postgres.database}
quarkus.datasource.username=${beeyond.postgres.username}
quarkus.datasource.password=${beeyond.postgres.password}
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.http.cors=true
# OIDC Configuration
quarkus.oidc.auth-server-url=${beeyond.keycloak.host}/auth/realms/${beeyond.keycloak.realm}
quarkus.oidc.client-id=${beeyond.keycloak.client-id}
quarkus.oidc.credentials.secret=${beeyond.keycloak.secret}
# Rest client
at.htl.beeyond.service.AuthenticationService/mp-rest/url=${beeyond.keycloak.host}/auth/realms/${beeyond.keycloak.realm}/protocol/openid-connect/token
at.htl.beeyond.service.AuthenticationService/mp-rest/scope=javax.inject.Singleton
# Disable Keycloak for test
%test.quarkus.oidc.enabled=false
# Enable basic auth for testing and disable it for production
quarkus.http.auth.basic=true
%prod.quarkus.http.auth.basic=false
# Enable static user for testing and disable it for production
quarkus.security.users.embedded.enabled=true
%prod.quarkus.security.users.embedded.enabled=true
# Insert test user for development
quarkus.security.users.embedded.plain-text=true
quarkus.security.users.embedded.users.stuetz=password
quarkus.security.users.embedded.users.moritz=password
quarkus.security.users.embedded.roles.stuetz=teacher
quarkus.security.users.embedded.roles.moritz=student
